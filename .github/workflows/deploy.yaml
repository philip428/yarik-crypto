name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - dev
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Pull, tag, and push Docker image
        run: |
          # IMAGE_URI=${{ secrets.ECR_REPOSITORY }}:hello-world
          IMAGE_URI=public.ecr.aws/l3t7h2r5/yarik-crypto-scraper:hello-world
          docker pull hello-world
          docker tag hello-world $IMAGE_URI
          docker push $IMAGE_URI

      # - name: Build, tag, and push Docker image
      #   run: |
      #     IMAGE_URI=${{ secrets.ECR_REPOSITORY }}:latest
      #     docker buildx create --use
      #     docker buildx build --platform linux/arm64 -t $IMAGE_URI --push .

      # - name: Update ECS service to force new deployment
      #   env:
      #     CLUSTER_NAME: ${{ secrets.ECS_CLUSTER }}
      #     SERVICE_NAME: ${{ secrets.ECS_SERVICE }}
      #   run: |
      #     aws ecs update-service --cluster $CLUSTER_NAME --service $SERVICE_NAME --force-new-deployment
